apiVersion: v1
kind: Pod
metadata:
  name: example-pod
  labels:
    app: myapp
spec:
  containers:
    - name: mycontainer
      image: myimage:latest
      ports:
        - containerPort: 80
      env:
        - name: ENV_VAR_NAME
          value: "value"
      volumeMounts:
        - mountPath: /mnt/storage
          name: storage
  volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: my-pvc
  restartPolicy: Always
  nodeSelector:
    disktype: ssd
  tolerations:
    - key: "key1"
      operator: "Equal"
      value: "value1"
      effect: "NoSchedule"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/e2e-az-name
                operator: In
                values:
                  - e2e-az1
                  - e2e-az2
  serviceAccountName: my-service-account
  imagePullSecrets:
    - name: myregistrykey
  hostNetwork: false
  dnsPolicy: Default
  securityContext:
    runAsUser: 1000
    fsGroup: 2000
  terminationGracePeriodSeconds: 30
  volumes:
    - name: config-volume
      configMap:
        name: my-config
        items:
          - key: config
            path: myconfig.yaml
    - name: secret-volume
      secret:
        secretName: my-secret
        items:
          - key: secret
            path: mysecret.txt
  initContainers:
    - name: init-myservice
      image: busybox
      command: ['sh', '-c', 'echo Init container is running']
